version: "3.7"
services:
  app:
    build:
      args:
        user: root
        uid: 3000
      context: ./
      dockerfile: Dockerfile
    image: example-project
    container_name: example-project-app
    restart: unless-stopped
    working_dir: /var/www/html/
    volumes:
      - ./html/:/var/www/html
      - ./files/:/var/www/files
    networks:
      - default

  nginx:
    image: nginx:1.17-alpine
    container_name: example-project-nginx
    restart: unless-stopped
    ports:
      - 8089:80
    volumes:
      - ./html/:/var/www/html
      - ./docker-compose/nginx:/etc/nginx/conf.d
      - ./docker-compose/xdebug:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./docker-compose/error_reporting/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    networks:
      - default
  
  redis:
    image: telkomindonesia/alpine:redis-5.0
    env_file:
      - ./redis.env
    restart: always
    ports:
      - 6379:6379
    volumes:
       - ./redis:/var/lib/redis/data
    networks:
      - default
  
  minio:
    image: telkomindonesia/debian:minio-1.0
    ports:
      - 9000:9000
    volumes:
      - ./minio:/data/minio
    container_name: minio
    environment:
      - MINIO_ACCESS_KEY=Test1234567
      - MINIO_SECRET_KEY=Test1234567
      - MINIO_BROWSER=on
    networks:
      - default

  mysql:
    image: 'mysql/mysql-server:8.0'
    ports:
        - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
        MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
        MYSQL_ROOT_HOST: "%"
        MYSQL_DATABASE: '${DB_DATABASE}'
        MYSQL_USER: '${DB_USERNAME}'
        MYSQL_PASSWORD: '${DB_PASSWORD}'
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
        - 'sailmysql:/var/lib/mysql'
    networks:
        - sail
    healthcheck:
        test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
        retries: 3
        timeout: 5s

networks:
  default:
    driver: bridge
